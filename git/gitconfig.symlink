[include]
    path = .gitconfig_local
[core]
    excludesfile = /Users/dannyt/.gitignore_global
    pager = "diff-so-fancy | less --tabs=4 -RFX"
[diff-so-fancy]
    markEmptyLines = false
	first-run = false
[color]
	ui = true
[credential]
    helper = osxkeychain
[pull]
    ff = only
[rebase]
    autoStash = true
[alias]
    aliases = config --get-regexp alias

    please = push --force-with-lease
    up = pull --rebase
    co = checkout
    ci = commit
    br = branch
    sw = switch
    st = status

    # list commands
    json = log --format='{ \"hashes\":{ \"commit\":\"%H\", \"tree\":\"%T\", \"parents\":\"%P\" }, \"author\":{ \"date\": \"%ai\", \"name\": \"%an\", \"email\":\"%ae\" }, \"committer\":{ \"date\": \"%ci\", \"name\": \"%cn\", \"email\":\"%ce\" } }'
    le = log --oneline --decorate
    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --stat
    ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
    lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
    ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
    lc  = "!f() { git ll "$1"^.."$1"; }; f"
    lnc = log --pretty=format:"%h\\ %s\\ [%cn]"
    lg = log --graph --oneline --decorate --all
    grog = log --graph --abbrev-commit --decorate --all --format=format:"%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(dim white) - %an%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n %C(white)%s%C(reset)"

    #list all aliases
    la = "!git config -l | grep alias | cut -c 7-"
    diff = diff --word-diff
    d = diff --word-diff
    dc = diff --cached

    #list modified files in last commit
    dl = "!git ll -1"

    #diff last commit
    dlc = diff --cached HEAD^
    dr  = "!f() { git diff "$1"^.."$1"; }; f"
    diffr  = "!f() { git diff "$1"^.."$1"; }; f"

    #reset commands
    r = reset
    r1 = reset HEAD^
    r2 = reset HEAD^^
    rh = reset --hard
    rh1 = reset HEAD^ --hard
    rh2 = reset HEAD^^ --hard

    ## Prunes Local Branches that track a remote, where the remote branch has been deleted
    plb = !prune-merged-pull-requests
    plb2 = !git remote prune origin && git branch -vv | grep '\\[[^]]* gone]' | awk '{ print $1 }' | xargs git branch -D
    plb3 = !git remote prune upstream && git branch -vv | grep '\\[[^]]* gone]' | awk '{ print $1 }' | xargs git branch -D
